{"ast":null,"code":"var _jsxFileName = \"/Users/myeongjae/Desktop/movie-react/src/components/ReviewForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./ReviewForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReviewForm() {\n  _s();\n  /*\n  const [title, setTitle] = useState(\"\");\n  const [rating, setRating] = useState(0);\n  const [content, setContent] = useState(\"\");*/\n  const [values, setValue] = useState({\n    title: \"\",\n    rating: 0,\n    content: \"\"\n  });\n\n  /*const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n   const handleRatingChange = (e) => {\n    const nextRating = Number(e.target.value) || 0;\n    setRating(nextRating);\n  };\n   const handleContentChange = (e) => {\n    setContent(e.target.value);\n  };*/\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    //State의 setter함수에 콜백이 들어오면 어떤 함수인지 꼭 기억할 것!\n    //비동기로 state를 변경할 때 state의 값이 최신 값이 아닐 경우를 대비해주는 힘수!\n    setValue(prevValues => ({\n      ...prevValues,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ReviewForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      value: values.title,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"rating\",\n      value: values.rating,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"content\",\n      value: values.content,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewForm, \"l/EIdYqIJsOYn7WJsmLVs9EscYc=\");\n_c = ReviewForm;\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ReviewForm","_s","values","setValue","title","rating","content","handleChange","e","name","value","target","prevValues","handleSubmit","preventDefault","console","log","className","onSubmit","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/myeongjae/Desktop/movie-react/src/components/ReviewForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./ReviewForm.css\";\n\nfunction ReviewForm() {\n  /*\n  const [title, setTitle] = useState(\"\");\n  const [rating, setRating] = useState(0);\n  const [content, setContent] = useState(\"\");*/\n  const [values, setValue] = useState({\n    title: \"\",\n    rating: 0,\n    content: \"\",\n  });\n\n  /*const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleRatingChange = (e) => {\n    const nextRating = Number(e.target.value) || 0;\n    setRating(nextRating);\n  };\n\n  const handleContentChange = (e) => {\n    setContent(e.target.value);\n  };*/\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    //State의 setter함수에 콜백이 들어오면 어떤 함수인지 꼭 기억할 것!\n    //비동기로 state를 변경할 때 state의 값이 최신 값이 아닐 경우를 대비해주는 힘수!\n    setValue((prevValues) => ({\n      ...prevValues,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(values);\n  };\n\n  return (\n    <form className=\"ReviewForm\" onSubmit={handleSubmit}>\n      <input name=\"title\" value={values.title} onChange={handleChange} />\n      <input\n        type=\"number\"\n        name=\"rating\"\n        value={values.rating}\n        onChange={handleChange}\n      />\n      <textarea name=\"content\" value={values.content} onChange={handleChange} />\n      <button type=\"submit\">확인</button>\n    </form>\n  );\n}\n\nexport default ReviewForm;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;AACF;AACA;AACA;EACE,MAAM,CAACC,MAAM,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IAClCO,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGE,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC;IACA;IACAR,QAAQ,CAAES,UAAU,KAAM;MACxB,GAAGA,UAAU;MACb,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,YAAY,GAAIL,CAAC,IAAK;IAC1BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACd,MAAM,CAAC;EACrB,CAAC;EAED,oBACEH,OAAA;IAAMkB,SAAS,EAAC,YAAY;IAACC,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBAClDpB,OAAA;MAAOU,IAAI,EAAC,OAAO;MAACC,KAAK,EAAER,MAAM,CAACE,KAAM;MAACgB,QAAQ,EAAEb;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnEzB,OAAA;MACE0B,IAAI,EAAC,QAAQ;MACbhB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAER,MAAM,CAACG,MAAO;MACrBe,QAAQ,EAAEb;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFzB,OAAA;MAAUU,IAAI,EAAC,SAAS;MAACC,KAAK,EAAER,MAAM,CAACI,OAAQ;MAACc,QAAQ,EAAEb;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1EzB,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEX;AAACvB,EAAA,CAnDQD,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAqDnB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}