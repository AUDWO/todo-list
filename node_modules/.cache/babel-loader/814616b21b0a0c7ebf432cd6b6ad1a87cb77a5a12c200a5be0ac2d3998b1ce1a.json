{"ast":null,"code":"var _jsxFileName = \"/Users/myeongjae/Desktop/movie-react/src/components/ReviewForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./ReviewForm.css\";\nimport FileInput from \"./FileInput\";\nimport RatingInput from \"./RatingInput\";\nimport { createReview } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_VALUES = {\n  title: \"\",\n  rating: 0,\n  content: \"\",\n  imgFile: null\n};\nfunction ReviewForm(_ref) {\n  _s();\n  let {\n    initialValues = INITIAL_VALUES,\n    onSubmitSuccess\n  } = _ref;\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submittingError, setSubmittingError] = useState(null);\n  const [values, setValue] = useState(initialValues);\n  //name과 value를 업데이트 시켜줌\n  //handleChange함수를 분리시켜준 이유:e.target.files[0]을 뽑아야 하기 때문.\n  const handleChange = (name, value) => {\n    setValue(prevValues => ({\n      //객체의 spread문법\n      ...prevValues,\n      //기존 객체의 값을 가지면서\n      //특정값만 수정하고 싶을때\n      //*참조값도 변경*\n      [name]: value\n    }));\n  };\n  const handleInputChange = e => {\n    //input태그의 name과 value값 (e.target = input태그)\n    //value는 e.target으로 부터 나오는 value이다.\n    const {\n      name,\n      value\n    } = e.target;\n    handleChange(name, value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"rating\", values.rating);\n    formData.append(\"content\", values.content);\n    formData.append(\"imgFile\", values.imgFile);\n    let result;\n    try {\n      setSubmittingError(null);\n      setIsSubmitting(true);\n      result = await createReview(formData);\n    } catch (error) {\n      setSubmittingError(error);\n      return;\n    } finally {\n      setIsSubmitting(false);\n    }\n    const {\n      review\n    } = result;\n    onSubmitSuccess(review);\n    setValue(INITIAL_VALUES);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ReviewForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FileInput, {\n      name: \"imgFile\",\n      onChange: handleChange,\n      value: values.imgFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      value: values.title,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RatingInput, {\n      name: \"rating\",\n      value: values.rating,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"content\",\n      value: values.content,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      children: \"\\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), (submittingError === null || submittingError === void 0 ? void 0 : submittingError.message) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: submittingError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewForm, \"3u4kDaMY8vceEUjhJskUtrQJRi4=\");\n_c = ReviewForm;\nexport default ReviewForm;\n\n/*const handleChange = (e)=>{\n  const {name, value} = e.target;\n  setValues(prevV=>{prevV.})\n}*/\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["useState","FileInput","RatingInput","createReview","jsxDEV","_jsxDEV","INITIAL_VALUES","title","rating","content","imgFile","ReviewForm","_ref","_s","initialValues","onSubmitSuccess","isSubmitting","setIsSubmitting","submittingError","setSubmittingError","values","setValue","handleChange","name","value","prevValues","handleInputChange","e","target","handleSubmit","preventDefault","formData","FormData","append","result","error","review","className","onSubmit","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","message","_c","$RefreshReg$"],"sources":["/Users/myeongjae/Desktop/movie-react/src/components/ReviewForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./ReviewForm.css\";\nimport FileInput from \"./FileInput\";\nimport RatingInput from \"./RatingInput\";\nimport { createReview } from \"../api\";\n\nconst INITIAL_VALUES = {\n  title: \"\",\n  rating: 0,\n  content: \"\",\n  imgFile: null,\n};\n\nfunction ReviewForm({ initialValues = INITIAL_VALUES, onSubmitSuccess }) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submittingError, setSubmittingError] = useState(null);\n  const [values, setValue] = useState(initialValues);\n  //name과 value를 업데이트 시켜줌\n  //handleChange함수를 분리시켜준 이유:e.target.files[0]을 뽑아야 하기 때문.\n  const handleChange = (name, value) => {\n    setValue((prevValues) => ({\n      //객체의 spread문법\n      ...prevValues,\n      //기존 객체의 값을 가지면서\n      //특정값만 수정하고 싶을때\n      //*참조값도 변경*\n      [name]: value,\n    }));\n  };\n\n  const handleInputChange = (e) => {\n    //input태그의 name과 value값 (e.target = input태그)\n    //value는 e.target으로 부터 나오는 value이다.\n    const { name, value } = e.target;\n    handleChange(name, value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"rating\", values.rating);\n    formData.append(\"content\", values.content);\n    formData.append(\"imgFile\", values.imgFile);\n\n    let result;\n    try {\n      setSubmittingError(null);\n      setIsSubmitting(true);\n      result = await createReview(formData);\n    } catch (error) {\n      setSubmittingError(error);\n      return;\n    } finally {\n      setIsSubmitting(false);\n    }\n    const { review } = result;\n    onSubmitSuccess(review);\n    setValue(INITIAL_VALUES);\n  };\n\n  return (\n    <form className=\"ReviewForm\" onSubmit={handleSubmit}>\n      <FileInput\n        name=\"imgFile\"\n        onChange={handleChange}\n        value={values.imgFile}\n      />\n      <input name=\"title\" value={values.title} onChange={handleInputChange} />\n      <RatingInput\n        name=\"rating\"\n        value={values.rating}\n        onChange={handleChange}\n      />\n      <textarea\n        name=\"content\"\n        value={values.content}\n        onChange={handleInputChange}\n      />\n      <button type=\"submit\" disabled={isSubmitting}>\n        확인\n      </button>\n      {submittingError?.message && <div>{submittingError.message}</div>}\n    </form>\n  );\n}\n\nexport default ReviewForm;\n\n/*const handleChange = (e)=>{\n  const {name, value} = e.target;\n  setValues(prevV=>{prevV.})\n}*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}