{"ast":null,"code":"var _jsxFileName = \"/Users/myeongjae/Desktop/movie-react/src/components/ReviewForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./ReviewForm.css\";\nimport FileInput from \"./FileInput\";\nimport RatingInput from \"./RatingInput\";\nimport { createReview } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_VALUES = {\n  title: \"\",\n  rating: 0,\n  content: \"\",\n  imgFile: null\n};\nfunction ReviewForm(_ref) {\n  _s();\n  let {\n    //왜 INITIAL_VALUES를 사용하지 않고 다시 변수에 할당했나 생각해보기\n    initialValues = INITIAL_VALUES,\n    initialPreview,\n    onSubmitSuccess,\n    onCancel,\n    onSubmit\n  } = _ref;\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submittingError, setSubmittingError] = useState(null);\n\n  //ReviewListItem한개에 대한 정보를 담아두는 value State\n  const [values, setValue] = useState(initialValues);\n\n  //handleInputChange에서 받아온 name, value를 바탕으로\n  //values를 업데이트 시켜주는 함수\n  //handleChange함수를 분리시켜준 이유:e.target.files[0]을 뽑아야 하기 때문.\n  const handleChange = (name, value) => {\n    setValue(prevValues => ({\n      //객체의 spread문법\n      ...prevValues,\n      //기존 객체의 값을 가지면서\n      //특정값만 수정하고 싶을때\n      //*참조값도 변경*\n      [name]: value\n    }));\n  };\n  const handleInputChange = e => {\n    //input태그의 name과 value값 (e.target = input태그)\n    //value는 e.target으로 부터 나오는 value이다.\n    //즉 우리가 작성하는 value를 의미\n    const {\n      name,\n      value\n    } = e.target;\n    handleChange(name, value);\n  };\n  //type이 submit인 button을 눌렀을때 실행되는 submit함수\n  //우리가 입력한 값을 바탕으로 서버에 있는  itmes를 업데이트 시켜준다.\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"rating\", values.rating);\n    formData.append(\"content\", values.content);\n    formData.append(\"imgFile\", values.imgFile);\n    let result;\n    //직접 입력한 값을 바탕으로 서버에 있는 items를 업데이트 시켜주는 함수\n    try {\n      setSubmittingError(null);\n      setIsSubmitting(true);\n      result = await onSubmit(formData);\n    } catch (error) {\n      setSubmittingError(error);\n      return;\n    } finally {\n      setIsSubmitting(false);\n    }\n    console.log(\"rrrrrr\");\n    console.log(result);\n    console.log(\"tttttt\");\n    const {\n      review\n    } = result;\n    //onSubmotSuccess() = handleSubmitSuccess()\n    //handleSubmitSuccess()는 items를 업데이트 시켜주는 함수이다.\n    onSubmitSuccess(review);\n    setValue(INITIAL_VALUES);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ReviewForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FileInput, {\n      name: \"imgFile\",\n      onChange: handleChange,\n      initialPreview: initialPreview,\n      value: values.imgFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      value: values.title,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RatingInput, {\n      name: \"rating\",\n      value: values.rating,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"content\",\n      value: values.content,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      children: \"\\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), onCancel && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onCancel,\n      children: \"\\uCDE8\\uC18C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 20\n    }, this), (submittingError === null || submittingError === void 0 ? void 0 : submittingError.message) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: submittingError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewForm, \"3u4kDaMY8vceEUjhJskUtrQJRi4=\");\n_c = ReviewForm;\nexport default ReviewForm;\n\n/*const handleChange = (e)=>{\n  const {name, value} = e.target;\n  setValues(prevV=>{prevV.})\n}*/\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["useState","FileInput","RatingInput","createReview","jsxDEV","_jsxDEV","INITIAL_VALUES","title","rating","content","imgFile","ReviewForm","_ref","_s","initialValues","initialPreview","onSubmitSuccess","onCancel","onSubmit","isSubmitting","setIsSubmitting","submittingError","setSubmittingError","values","setValue","handleChange","name","value","prevValues","handleInputChange","e","target","handleSubmit","preventDefault","formData","FormData","append","result","error","console","log","review","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","onClick","message","_c","$RefreshReg$"],"sources":["/Users/myeongjae/Desktop/movie-react/src/components/ReviewForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./ReviewForm.css\";\nimport FileInput from \"./FileInput\";\nimport RatingInput from \"./RatingInput\";\nimport { createReview } from \"../api\";\n\nconst INITIAL_VALUES = {\n  title: \"\",\n  rating: 0,\n  content: \"\",\n  imgFile: null,\n};\n\nfunction ReviewForm({\n  //왜 INITIAL_VALUES를 사용하지 않고 다시 변수에 할당했나 생각해보기\n  initialValues = INITIAL_VALUES,\n  initialPreview,\n  onSubmitSuccess,\n  onCancel,\n  onSubmit,\n}) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submittingError, setSubmittingError] = useState(null);\n\n  //ReviewListItem한개에 대한 정보를 담아두는 value State\n  const [values, setValue] = useState(initialValues);\n\n  //handleInputChange에서 받아온 name, value를 바탕으로\n  //values를 업데이트 시켜주는 함수\n  //handleChange함수를 분리시켜준 이유:e.target.files[0]을 뽑아야 하기 때문.\n  const handleChange = (name, value) => {\n    setValue((prevValues) => ({\n      //객체의 spread문법\n      ...prevValues,\n      //기존 객체의 값을 가지면서\n      //특정값만 수정하고 싶을때\n      //*참조값도 변경*\n      [name]: value,\n    }));\n  };\n\n  const handleInputChange = (e) => {\n    //input태그의 name과 value값 (e.target = input태그)\n    //value는 e.target으로 부터 나오는 value이다.\n    //즉 우리가 작성하는 value를 의미\n    const { name, value } = e.target;\n    handleChange(name, value);\n  };\n  //type이 submit인 button을 눌렀을때 실행되는 submit함수\n  //우리가 입력한 값을 바탕으로 서버에 있는  itmes를 업데이트 시켜준다.\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"rating\", values.rating);\n    formData.append(\"content\", values.content);\n    formData.append(\"imgFile\", values.imgFile);\n\n    let result;\n    //직접 입력한 값을 바탕으로 서버에 있는 items를 업데이트 시켜주는 함수\n    try {\n      setSubmittingError(null);\n      setIsSubmitting(true);\n      result = await onSubmit(formData);\n    } catch (error) {\n      setSubmittingError(error);\n      return;\n    } finally {\n      setIsSubmitting(false);\n    }\n    console.log(\"rrrrrr\");\n    console.log(result);\n    console.log(\"tttttt\");\n    const { review } = result;\n    //onSubmotSuccess() = handleSubmitSuccess()\n    //handleSubmitSuccess()는 items를 업데이트 시켜주는 함수이다.\n    onSubmitSuccess(review);\n    setValue(INITIAL_VALUES);\n  };\n\n  return (\n    <form className=\"ReviewForm\" onSubmit={handleSubmit}>\n      <FileInput\n        name=\"imgFile\"\n        onChange={handleChange}\n        initialPreview={initialPreview}\n        value={values.imgFile}\n      />\n\n      <input name=\"title\" value={values.title} onChange={handleInputChange} />\n\n      <RatingInput\n        name=\"rating\"\n        value={values.rating}\n        onChange={handleChange}\n      />\n\n      <textarea\n        name=\"content\"\n        value={values.content}\n        onChange={handleInputChange}\n      />\n      <button type=\"submit\" disabled={isSubmitting}>\n        확인\n      </button>\n\n      {onCancel && <button onClick={onCancel}>취소</button>}\n      {submittingError?.message && <div>{submittingError.message}</div>}\n    </form>\n  );\n}\n\nexport default ReviewForm;\n\n/*const handleChange = (e)=>{\n  const {name, value} = e.target;\n  setValues(prevV=>{prevV.})\n}*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}