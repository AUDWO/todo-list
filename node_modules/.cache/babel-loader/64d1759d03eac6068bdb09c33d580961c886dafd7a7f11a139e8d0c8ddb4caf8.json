{"ast":null,"code":"var _jsxFileName = \"/Users/myeongjae/Desktop/movie-react/src/components/ReviewList.js\",\n  _s = $RefreshSig$();\nimport \"./ReviewList.css\";\nimport Rating from \"./Rating\";\nimport ReviewForm from \"./ReviewForm\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatDate(value) {\n  const date = new Date(value);\n  return `${date.getFullYear()}. ${date.getMonth() + 1}. ${date.getDate()}`;\n}\n\n//item값에 다양한 정보들이 있기 때문에 props의 프러퍼티를 많이 가져올 필요가 없다!!!\nfunction ReviewListItem(_ref) {\n  let {\n    item,\n    onDelete,\n    onEdit\n  } = _ref;\n  //ReviewListItem에서 받아온 item으로 고유 item id를 받아올 수 있다.\n  //어차피 모둔 item에는 delete버튼이 있고 button이 눌려진 아이템은 한개일테니\n  const handleDeleteClick = () => onDelete(item.id);\n  const handleEditClick = () => {\n    //onEdit = setEditingId\n    onEdit(item.id);\n    //editingId가 바뀌면서 다시 ReviewList는 다시 리렌더링 된다.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReviewListItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"ReviewListItem-img\",\n      src: item.imgUrl,\n      alt: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rating, {\n        value: item.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatDate(item.createAt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteClick,\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditClick,\n        children: \"\\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = ReviewListItem;\nfunction ReviewList(_ref2) {\n  _s();\n  let {\n    items,\n    onDelete,\n    onUpdate,\n    onUpdateSuccess\n  } = _ref2;\n  //editingId는 수정 할 요소의 id를 가진다.\n  const [editingId, setEditingId] = useState(null);\n  const handleCancel = () => setEditingId(null);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: items.map(item => {\n      if (item.id === editingId) {\n        const {\n          id,\n          imgUrl,\n          title,\n          rating,\n          content\n        } = item;\n        const initialValues = {\n          title,\n          rating,\n          content,\n          imgFile: null\n        };\n        const handleSubmit = formData => onUpdate(id, formData);\n        const handleSubmitSuccess = reivew => {\n          onUpdateSuccess(reivew);\n          setEditingId(null);\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(ReviewForm, {\n            initialValues: initialValues,\n            initialPreview: imgUrl,\n            onCancel: handleCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(ReviewListItem, {\n          item: item,\n          onDelete: onDelete,\n          onEdit: setEditingId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewList, \"MG5awC7Ihekw7aEM7lW55+n6oMg=\");\n_c2 = ReviewList;\nexport default ReviewList;\nvar _c, _c2;\n$RefreshReg$(_c, \"ReviewListItem\");\n$RefreshReg$(_c2, \"ReviewList\");","map":{"version":3,"names":["Rating","ReviewForm","useState","jsxDEV","_jsxDEV","formatDate","value","date","Date","getFullYear","getMonth","getDate","ReviewListItem","_ref","item","onDelete","onEdit","handleDeleteClick","id","handleEditClick","className","children","src","imgUrl","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","rating","createAt","content","onClick","_c","ReviewList","_ref2","_s","items","onUpdate","onUpdateSuccess","editingId","setEditingId","handleCancel","map","initialValues","imgFile","handleSubmit","formData","handleSubmitSuccess","reivew","initialPreview","onCancel","_c2","$RefreshReg$"],"sources":["/Users/myeongjae/Desktop/movie-react/src/components/ReviewList.js"],"sourcesContent":["import \"./ReviewList.css\";\nimport Rating from \"./Rating\";\nimport ReviewForm from \"./ReviewForm\";\nimport { useState } from \"react\";\n\nfunction formatDate(value) {\n  const date = new Date(value);\n  return `${date.getFullYear()}. ${date.getMonth() + 1}. ${date.getDate()}`;\n}\n\n//item값에 다양한 정보들이 있기 때문에 props의 프러퍼티를 많이 가져올 필요가 없다!!!\nfunction ReviewListItem({ item, onDelete, onEdit }) {\n  //ReviewListItem에서 받아온 item으로 고유 item id를 받아올 수 있다.\n  //어차피 모둔 item에는 delete버튼이 있고 button이 눌려진 아이템은 한개일테니\n  const handleDeleteClick = () => onDelete(item.id);\n\n  const handleEditClick = () => {\n    //onEdit = setEditingId\n    onEdit(item.id);\n    //editingId가 바뀌면서 다시 ReviewList는 다시 리렌더링 된다.\n  };\n\n  return (\n    <div className=\"ReviewListItem\">\n      <img className=\"ReviewListItem-img\" src={item.imgUrl} alt={item.title} />\n      <div>\n        <h1>{item.title}</h1>\n        <Rating value={item.rating} />\n        <p>{formatDate(item.createAt)}</p>\n        <p>{item.content}</p>\n        <button onClick={handleDeleteClick}>삭제</button>\n        <button onClick={handleEditClick}>수정</button>\n      </div>\n    </div>\n  );\n}\n\nfunction ReviewList({ items, onDelete, onUpdate, onUpdateSuccess }) {\n  //editingId는 수정 할 요소의 id를 가진다.\n  const [editingId, setEditingId] = useState(null);\n\n  const handleCancel = () => setEditingId(null);\n\n  return (\n    <ul>\n      {items.map((item) => {\n        if (item.id === editingId) {\n          const { id, imgUrl, title, rating, content } = item;\n          const initialValues = { title, rating, content, imgFile: null };\n\n          const handleSubmit = (formData) => onUpdate(id, formData);\n          const handleSubmitSuccess = (reivew) => {\n            onUpdateSuccess(reivew);\n            setEditingId(null);\n          };\n\n          return (\n            <li key={item.id}>\n              <ReviewForm\n                initialValues={initialValues}\n                initialPreview={imgUrl}\n                onCancel={handleCancel}\n              />\n            </li>\n          );\n        }\n        return (\n          <li key={item.id}>\n            <ReviewListItem\n              item={item}\n              onDelete={onDelete}\n              onEdit={setEditingId}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default ReviewList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}