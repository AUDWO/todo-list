{"ast":null,"code":"var _jsxFileName = \"/Users/myeongjae/Desktop/movie-react/src/components/ReviewList.js\",\n  _s = $RefreshSig$();\nimport \"./ReviewList.css\";\nimport Rating from \"./Rating\";\nimport ReviewForm from \"./ReviewForm\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatDate(value) {\n  const date = new Date(value);\n  return `${date.getFullYear()}. ${date.getMonth() + 1}. ${date.getDate()}`;\n}\nfunction ReviewListItem(_ref) {\n  let {\n    item,\n    onDelete\n  } = _ref;\n  //ReviewListItem에서 받아온 item으로 고유 item id를 받아올 수 있다.\n  //어차피 모둔 item에는 delete버튼이 있고 button이 눌려진 아이템은 한개일테니\n  const handleDeleteClick = () => onDelete(item.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReviewListItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"ReviewListItem-img\",\n      src: item.imgUrl,\n      alt: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rating, {\n        value: item.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatDate(item.createAt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteClick,\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = ReviewListItem;\nfunction ReviewList(_ref2) {\n  _s();\n  let {\n    items,\n    onDelete\n  } = _ref2;\n  const [editingId, setEditingId] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: items.map(item => {\n      if (item.id === editingId) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(ReviewForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(ReviewListItem, {\n          item: item,\n          onDelete: onDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewList, \"MG5awC7Ihekw7aEM7lW55+n6oMg=\");\n_c2 = ReviewList;\nexport default ReviewList;\nvar _c, _c2;\n$RefreshReg$(_c, \"ReviewListItem\");\n$RefreshReg$(_c2, \"ReviewList\");","map":{"version":3,"names":["Rating","ReviewForm","useState","jsxDEV","_jsxDEV","formatDate","value","date","Date","getFullYear","getMonth","getDate","ReviewListItem","_ref","item","onDelete","handleDeleteClick","id","className","children","src","imgUrl","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","rating","createAt","content","onClick","_c","ReviewList","_ref2","_s","items","editingId","setEditingId","map","_c2","$RefreshReg$"],"sources":["/Users/myeongjae/Desktop/movie-react/src/components/ReviewList.js"],"sourcesContent":["import \"./ReviewList.css\";\nimport Rating from \"./Rating\";\nimport ReviewForm from \"./ReviewForm\";\nimport { useState } from \"react\";\n\nfunction formatDate(value) {\n  const date = new Date(value);\n  return `${date.getFullYear()}. ${date.getMonth() + 1}. ${date.getDate()}`;\n}\n\nfunction ReviewListItem({ item, onDelete }) {\n  //ReviewListItem에서 받아온 item으로 고유 item id를 받아올 수 있다.\n  //어차피 모둔 item에는 delete버튼이 있고 button이 눌려진 아이템은 한개일테니\n  const handleDeleteClick = () => onDelete(item.id);\n  return (\n    <div className=\"ReviewListItem\">\n      <img className=\"ReviewListItem-img\" src={item.imgUrl} alt={item.title} />\n      <div>\n        <h1>{item.title}</h1>\n        <Rating value={item.rating} />\n        <p>{formatDate(item.createAt)}</p>\n        <p>{item.content}</p>\n        <button onClick={handleDeleteClick}>삭제</button>\n      </div>\n    </div>\n  );\n}\n\nfunction ReviewList({ items, onDelete }) {\n  const [editingId, setEditingId] = useState(null);\n  return (\n    <ul>\n      {items.map((item) => {\n        if (item.id === editingId) {\n          return (\n            <li key={item.id}>\n              <ReviewForm />\n            </li>\n          );\n        }\n        return (\n          <li key={item.id}>\n            <ReviewListItem item={item} onDelete={onDelete} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default ReviewList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}