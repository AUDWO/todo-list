{"ast":null,"code":"var _jsxFileName = \"/Users/myeongjae/Desktop/movie-react/src/components/FileInput.js\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileInput(_ref) {\n  _s();\n  let {\n    name,\n    value,\n    onChange\n  } = _ref;\n  const inputRef = useRef();\n  const handleInputChange = e => {\n    console.log(e.target.files);\n    const nextValue = e.target.files[0];\n    //onChange함수를 통해 nextValue(File)를 values에 업데이트 시킴\n\n    onChange(name, nextValue);\n  };\n  const handleClearClick = () => {\n    const inputNode = inputRef.current;\n    if (!inputNode) return;\n    inputNode.value = \"\";\n    onChange(name, null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleInputChange,\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), value && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearClick,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(FileInput, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n_c = FileInput;\nexport default FileInput;\nvar _c;\n$RefreshReg$(_c, \"FileInput\");","map":{"version":3,"names":["useRef","jsxDEV","_jsxDEV","FileInput","_ref","_s","name","value","onChange","inputRef","handleInputChange","e","console","log","target","files","nextValue","handleClearClick","inputNode","current","children","type","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/myeongjae/Desktop/movie-react/src/components/FileInput.js"],"sourcesContent":["import { useRef } from \"react\";\n\nfunction FileInput({ name, value, onChange }) {\n  const inputRef = useRef();\n\n  const handleInputChange = (e) => {\n    console.log(e.target.files);\n    const nextValue = e.target.files[0];\n    //onChange함수를 통해 nextValue(File)를 values에 업데이트 시킴\n\n    onChange(name, nextValue);\n  };\n\n  const handleClearClick = () => {\n    const inputNode = inputRef.current;\n    if (!inputNode) return;\n\n    inputNode.value = \"\";\n    onChange(name, null);\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleInputChange} ref={inputRef} />\n      {value && <button onClick={handleClearClick}>X</button>}\n    </div>\n  );\n}\n\nexport default FileInput;\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,SAASA,CAAAC,IAAA,EAA4B;EAAAC,EAAA;EAAA,IAA3B;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EAC1C,MAAMK,QAAQ,GAAGT,MAAM,CAAC,CAAC;EAEzB,MAAMU,iBAAiB,GAAIC,CAAC,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC3B,MAAMC,SAAS,GAAGL,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnC;;IAEAP,QAAQ,CAACF,IAAI,EAAEU,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,SAAS,GAAGT,QAAQ,CAACU,OAAO;IAClC,IAAI,CAACD,SAAS,EAAE;IAEhBA,SAAS,CAACX,KAAK,GAAG,EAAE;IACpBC,QAAQ,CAACF,IAAI,EAAE,IAAI,CAAC;EACtB,CAAC;EAED,oBACEJ,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACb,QAAQ,EAAEE,iBAAkB;MAACY,GAAG,EAAEb;IAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChEnB,KAAK,iBAAIL,OAAA;MAAQyB,OAAO,EAAEV,gBAAiB;MAAAG,QAAA,EAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAACrB,EAAA,CAzBQF,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA2BlB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}