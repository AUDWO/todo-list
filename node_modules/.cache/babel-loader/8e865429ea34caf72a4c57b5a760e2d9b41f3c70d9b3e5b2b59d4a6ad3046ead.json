{"ast":null,"code":"var _jsxFileName = \"/Users/myeongjae/Desktop/movie-react/src/components/FileInput.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileInput(_ref) {\n  _s();\n  let {\n    name,\n    value,\n    initialPreview,\n    onChange\n  } = _ref;\n  const [preview, setPreview] = useState(initialPreview);\n  const inputRef = useRef();\n  //우리가 직접 적는 input태그들은 거기에서 handleInputChange함수를 사용할 수 있지만\n\n  const handleInputChange = e => {\n    console.log(`fileeeeee:${e.target.files}`);\n    const nextValue = e.target.files[0];\n    //onChange함수를 통해 nextValue(File)를 values에 업데이트 시킴\n\n    onChange(name, nextValue);\n  };\n  const handleClearClick = () => {\n    const inputNode = inputRef.current;\n    console.dir(`aaaaaaa:${inputNode}`);\n    console.log(inputNode.width);\n    if (!inputNode) return;\n    inputNode.value = \"\";\n    onChange(name, null);\n  };\n\n  // value 프롭의 값이 바뀌면 -->\n  //preview 스테이트 값이 바뀜 의 관계를 명확하게 드러내주기 위해서\n  useEffect(() => {\n    if (!value) return;\n    const nextPreview = URL.createObjectURL(value);\n    //사이드 이펙트 발생\n    setPreview(nextPreview);\n\n    //디펜던시 리스트 값이 바뀌어서 리렌더링 되면 콜백을 실행할텐데\n    //새로 콜백을 실행하기 전에 리액트는 앞에서 리턴한 이 정리 함수를 실행\n    //사이드 이펙트를 정리할 수 있게 해준다.\n    return () => {\n      setPreview(initialPreview);\n      URL.revokeObjectURL(nextPreview);\n    };\n  }, [value, initialPreview]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: preview,\n      alt: \"\\uC774\\uBBF8\\uC9C0 \\uBBF8\\uB9AC\\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleInputChange,\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), value && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearClick,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(FileInput, \"hr9E7WrrjidGrVRJkuHeRDybq3I=\");\n_c = FileInput;\nexport default FileInput;\nvar _c;\n$RefreshReg$(_c, \"FileInput\");","map":{"version":3,"names":["useRef","useState","useEffect","jsxDEV","_jsxDEV","FileInput","_ref","_s","name","value","initialPreview","onChange","preview","setPreview","inputRef","handleInputChange","e","console","log","target","files","nextValue","handleClearClick","inputNode","current","dir","width","nextPreview","URL","createObjectURL","revokeObjectURL","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/myeongjae/Desktop/movie-react/src/components/FileInput.js"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\";\n\nfunction FileInput({ name, value, initialPreview, onChange }) {\n  const [preview, setPreview] = useState(initialPreview);\n  const inputRef = useRef();\n  //우리가 직접 적는 input태그들은 거기에서 handleInputChange함수를 사용할 수 있지만\n\n  const handleInputChange = (e) => {\n    console.log(`fileeeeee:${e.target.files}`);\n    const nextValue = e.target.files[0];\n    //onChange함수를 통해 nextValue(File)를 values에 업데이트 시킴\n\n    onChange(name, nextValue);\n  };\n\n  const handleClearClick = () => {\n    const inputNode = inputRef.current;\n    console.dir(`aaaaaaa:${inputNode}`);\n    console.log(inputNode.width);\n    if (!inputNode) return;\n\n    inputNode.value = \"\";\n    onChange(name, null);\n  };\n\n  // value 프롭의 값이 바뀌면 -->\n  //preview 스테이트 값이 바뀜 의 관계를 명확하게 드러내주기 위해서\n  useEffect(() => {\n    if (!value) return;\n    const nextPreview = URL.createObjectURL(value);\n    //사이드 이펙트 발생\n    setPreview(nextPreview);\n\n    //디펜던시 리스트 값이 바뀌어서 리렌더링 되면 콜백을 실행할텐데\n    //새로 콜백을 실행하기 전에 리액트는 앞에서 리턴한 이 정리 함수를 실행\n    //사이드 이펙트를 정리할 수 있게 해준다.\n    return () => {\n      setPreview(initialPreview);\n      URL.revokeObjectURL(nextPreview);\n    };\n  }, [value, initialPreview]);\n\n  return (\n    <div>\n      <img src={preview} alt=\"이미지 미리보기\" />\n      <input type=\"file\" onChange={handleInputChange} ref={inputRef} />\n      {value && <button onClick={handleClearClick}>X</button>}\n    </div>\n  );\n}\n\nexport default FileInput;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,SAASA,CAAAC,IAAA,EAA4C;EAAAC,EAAA;EAAA,IAA3C;IAAEC,IAAI;IAAEC,KAAK;IAAEC,cAAc;IAAEC;EAAS,CAAC,GAAAL,IAAA;EAC1D,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAACS,cAAc,CAAC;EACtD,MAAMI,QAAQ,GAAGd,MAAM,CAAC,CAAC;EACzB;;EAEA,MAAMe,iBAAiB,GAAIC,CAAC,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAAE,aAAYF,CAAC,CAACG,MAAM,CAACC,KAAM,EAAC,CAAC;IAC1C,MAAMC,SAAS,GAAGL,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnC;;IAEAT,QAAQ,CAACH,IAAI,EAAEa,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,SAAS,GAAGT,QAAQ,CAACU,OAAO;IAClCP,OAAO,CAACQ,GAAG,CAAE,WAAUF,SAAU,EAAC,CAAC;IACnCN,OAAO,CAACC,GAAG,CAACK,SAAS,CAACG,KAAK,CAAC;IAC5B,IAAI,CAACH,SAAS,EAAE;IAEhBA,SAAS,CAACd,KAAK,GAAG,EAAE;IACpBE,QAAQ,CAACH,IAAI,EAAE,IAAI,CAAC;EACtB,CAAC;;EAED;EACA;EACAN,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,KAAK,EAAE;IACZ,MAAMkB,WAAW,GAAGC,GAAG,CAACC,eAAe,CAACpB,KAAK,CAAC;IAC9C;IACAI,UAAU,CAACc,WAAW,CAAC;;IAEvB;IACA;IACA;IACA,OAAO,MAAM;MACXd,UAAU,CAACH,cAAc,CAAC;MAC1BkB,GAAG,CAACE,eAAe,CAACH,WAAW,CAAC;IAClC,CAAC;EACH,CAAC,EAAE,CAAClB,KAAK,EAAEC,cAAc,CAAC,CAAC;EAE3B,oBACEN,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAK4B,GAAG,EAAEpB,OAAQ;MAACqB,GAAG,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpCjC,OAAA;MAAOkC,IAAI,EAAC,MAAM;MAAC3B,QAAQ,EAAEI,iBAAkB;MAACwB,GAAG,EAAEzB;IAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChE5B,KAAK,iBAAIL,OAAA;MAAQoC,OAAO,EAAElB,gBAAiB;MAAAS,QAAA,EAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAAC9B,EAAA,CA/CQF,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAiDlB,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}