{"ast":null,"code":"var _jsxFileName = \"/Users/myeongjae/Desktop/movie-react/src/components/ReviewForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./ReviewForm.css\";\nimport FileInput from \"./FileInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReviewForm() {\n  _s();\n  const [values, setValue] = useState({\n    title: \"\",\n    rating: 0,\n    content: \"\",\n    imgFile: null\n  });\n  const handleChange = (name, value) => {\n    setValue(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleInputChange = e => {\n    //input태그의 name과 value값 (e.target = input태그)\n    //value는 e.target으로 부터 나오는 value이다.\n    const {\n      name,\n      value\n    } = e.target;\n    handleChange(name, value);\n    //State의 setter함수에 콜백이 들어오면 어떤 함수인지 꼭 기억할 것!\n    //비동기로 state를 변경할 때 state의 값이 최신 값이 아닐 경우를 대비해주는 힘수!\n\n    setValue(prevValues => ({\n      //객체의 spread문법\n      ...prevValues,\n      //기존 객체의 값을 가지면서\n      //특정값만 수정하고 싶을때\n      //*참조값도 변경*\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ReviewForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FileInput, {\n      name: \"imgFile\",\n      value: values.imgFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      value: values.title,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"rating\",\n      value: values.rating,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"content\",\n      value: values.content,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewForm, \"yx4NuRlZkb3PF+n56gH5o0mfGn4=\");\n_c = ReviewForm;\nexport default ReviewForm;\n\n/*const handleChange = (e)=>{\n  const {name, value} = e.target;\n  setValues(prevV=>{prevV.})\n}*/\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["useState","FileInput","jsxDEV","_jsxDEV","ReviewForm","_s","values","setValue","title","rating","content","imgFile","handleChange","name","value","prev","handleInputChange","e","target","prevValues","handleSubmit","preventDefault","console","log","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","_c","$RefreshReg$"],"sources":["/Users/myeongjae/Desktop/movie-react/src/components/ReviewForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./ReviewForm.css\";\nimport FileInput from \"./FileInput\";\n\nfunction ReviewForm() {\n  const [values, setValue] = useState({\n    title: \"\",\n    rating: 0,\n    content: \"\",\n    imgFile: null,\n  });\n\n  const handleChange = (name, value) => {\n    setValue((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleInputChange = (e) => {\n    //input태그의 name과 value값 (e.target = input태그)\n    //value는 e.target으로 부터 나오는 value이다.\n    const { name, value } = e.target;\n    handleChange(name, value);\n    //State의 setter함수에 콜백이 들어오면 어떤 함수인지 꼭 기억할 것!\n    //비동기로 state를 변경할 때 state의 값이 최신 값이 아닐 경우를 대비해주는 힘수!\n\n    setValue((prevValues) => ({\n      //객체의 spread문법\n      ...prevValues,\n      //기존 객체의 값을 가지면서\n      //특정값만 수정하고 싶을때\n      //*참조값도 변경*\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(values);\n  };\n\n  return (\n    <form className=\"ReviewForm\" onSubmit={handleSubmit}>\n      <FileInput name=\"imgFile\" value={values.imgFile} />\n      <input name=\"title\" value={values.title} onChange={handleInputChange} />\n      <input\n        type=\"number\"\n        name=\"rating\"\n        value={values.rating}\n        onChange={handleInputChange}\n      />\n      <textarea\n        name=\"content\"\n        value={values.content}\n        onChange={handleInputChange}\n      />\n      <button type=\"submit\">확인</button>\n    </form>\n  );\n}\n\nexport default ReviewForm;\n\n/*const handleChange = (e)=>{\n  const {name, value} = e.target;\n  setValues(prevV=>{prevV.})\n}*/\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,kBAAkB;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC;IAClCQ,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IACpCP,QAAQ,CAAEQ,IAAI,KAAM;MAClB,GAAGA,IAAI;MACP,CAACF,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,iBAAiB,GAAIC,CAAC,IAAK;IAC/B;IACA;IACA,MAAM;MAAEJ,IAAI;MAAEC;IAAM,CAAC,GAAGG,CAAC,CAACC,MAAM;IAChCN,YAAY,CAACC,IAAI,EAAEC,KAAK,CAAC;IACzB;IACA;;IAEAP,QAAQ,CAAEY,UAAU,KAAM;MACxB;MACA,GAAGA,UAAU;MACb;MACA;MACA;MACA,CAACN,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMM,YAAY,GAAIH,CAAC,IAAK;IAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACjB,MAAM,CAAC;EACrB,CAAC;EAED,oBACEH,OAAA;IAAMqB,SAAS,EAAC,YAAY;IAACC,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBAClDvB,OAAA,CAACF,SAAS;MAACY,IAAI,EAAC,SAAS;MAACC,KAAK,EAAER,MAAM,CAACK;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnD3B,OAAA;MAAOU,IAAI,EAAC,OAAO;MAACC,KAAK,EAAER,MAAM,CAACE,KAAM;MAACuB,QAAQ,EAAEf;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxE3B,OAAA;MACE6B,IAAI,EAAC,QAAQ;MACbnB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAER,MAAM,CAACG,MAAO;MACrBsB,QAAQ,EAAEf;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACF3B,OAAA;MACEU,IAAI,EAAC,SAAS;MACdC,KAAK,EAAER,MAAM,CAACI,OAAQ;MACtBqB,QAAQ,EAAEf;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACF3B,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEX;AAACzB,EAAA,CAxDQD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AA0DnB,eAAeA,UAAU;;AAEzB;AACA;AACA;AACA;AAHA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}